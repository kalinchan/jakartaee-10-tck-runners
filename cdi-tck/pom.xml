<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2022, 2024 Contributors to the Eclipse Foundation.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>fish.payara.tck</groupId>
    <artifactId>payara-cdi-tck</artifactId>
    <version>1.0.0</version>

    <name>CDI TCK Full runner 4.1 for Weld (Payara)</name>
    <description>Aggregates dependencies and runs the CDI TCK on Payara</description>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-core-bom</artifactId>
                <version>6.0.0.Beta4</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.8.0.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Jakarta EE APIs -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>4.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-el-api</artifactId>
            <version>4.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.faces</groupId>
            <artifactId>jakarta.faces-api</artifactId>
            <version>4.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.jms</groupId>
            <artifactId>jakarta.jms-api</artifactId>
            <version>3.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.transaction</groupId>
            <artifactId>jakarta.transaction-api</artifactId>
            <version>2.0.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.resource</groupId>
            <artifactId>jakarta.resource-api</artifactId>
            <version>2.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet.jsp</groupId>
            <artifactId>jakarta.servlet.jsp-api</artifactId>
            <version>4.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>4.0.0</version>
            <scope>test</scope>
        </dependency>

        <!-- Weld (CDI implementation) -->
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-api</artifactId>
            <version>6.0.Beta5</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-spi</artifactId>
            <version>6.0.Beta5</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-impl</artifactId>
            <version>6.0.0.Beta4</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-web</artifactId>
            <version>6.0.0.Beta4</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--
            The TCK API is quite small and mostly contains the org.jboss.cdi.tck.api.Configuration interface
            for programmatically configuring the TCK with things such as "org.jboss.cdi.tck.testDataSource" which
            are set below using a system property.
        -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-api</artifactId>
            <version>4.1.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--
            The TCK Core implementation contains test helper code such as the Configuration implementation
            and the ArchiveBuilder, as well as a large amount of tests.
         -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-core-impl</artifactId>
            <version>4.1.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-core-impl</artifactId>
            <version>4.1.0</version>
            <type>xml</type>
            <classifier>suite</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.glassfish.expressly</groupId>
            <artifactId>expressly</artifactId>
            <version>6.0.0-M1</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.70.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-lite-extension-translator</artifactId>
            <version>6.0.0.Beta4</version>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.9.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Remote Payara server -->
        <dependency>
            <groupId>fish.payara.arquillian</groupId>
            <artifactId>arquillian-payara-server-remote</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>fish.payara.arquillian</groupId>
            <artifactId>payara-client-ee9</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <!-- Disable annotation processor for test sources -->
                    <testCompilerArgument>-proc:none</testCompilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependency/lib</outputDirectory>
                            <archive>
                                <manifest>
                                    <addClasspath>false</addClasspath>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <!-- Copy the TestNG suite file -->
                    <execution>
                        <id>copy-test-suites</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <!--
                                    Contains what becomes the tck-core-suite.xml; the TestNG suite file that dictates
                                    which tests from the TCK Web implementation are executed and which are excluded.
                                    Note that this file is essentially a superset of the suite file from the TCK Core,
                                    so we don't need that one separately here.
                                -->
                                <artifactItem>
                                    <groupId>jakarta.enterprise</groupId>
                                    <artifactId>cdi-tck-core-impl</artifactId>
                                    <version>4.1.0</version>
                                    <type>xml</type>
                                    <classifier>suite</classifier>
                                    <overWrite>false</overWrite>
                                    <destFileName>tck-core-suite.xml</destFileName>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>target/suites</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <argLine>-Xmx768m</argLine>
                            <!-- Surefire / TestNG Properties -->
                            <!-- The suite, the exclude and the test dependencies together determine which tests are being run -->
                            <suiteXmlFiles>
                                <suiteXmlFile>target/suites/tck-core-suite.xml</suiteXmlFile>
                            </suiteXmlFiles>
                            <excludedGroups>${excluded.groups}</excludedGroups>
                            <dependenciesToScan>
                                <dependency>jakarta.enterprise:cdi-tck-core-impl</dependency>
                            </dependenciesToScan>
                            <properties>
                                <property>
                                    <name>surefire.testng.verbose</name>
                                    <value>1</value>
                                </property>
                            </properties>
                            <forkCount>1</forkCount>
                            <reuseForks>true</reuseForks>
                            <!-- System Properties -->
                            <systemPropertyVariables>
                                <glassfish.home>${glassfish.root}/payara7</glassfish.home>
                                <glassfish.enableDerby>true</glassfish.enableDerby>
                                <glassfish.maxHeapSize>2048m</glassfish.maxHeapSize>
                                <glassfish.enableAssertions>:org.jboss.cdi.tck...</glassfish.enableAssertions>
                                <libPath>${project.build.outputDirectory}</libPath>
                                <org.jboss.cdi.tck.libraryDirectory>${project.build.directory}/dependency/lib</org.jboss.cdi.tck.libraryDirectory>
                                <debugMode>true</debugMode>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>generate-test-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report-only</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <reportsDirectories>${project.build.directory}/surefire-reports/junitreports</reportsDirectories>
                    <outputDirectory>${project.build.directory}/surefire-reports</outputDirectory>
                    <outputName>test-report</outputName>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>full</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <payara-artifact-id>payara</payara-artifact-id>
                <excluded.groups>se</excluded.groups>
            </properties>
        </profile>
        <profile>
            <id>payara-web</id>
            <properties>
                <payara-artifact-id>web</payara-artifact-id>
                <excluded.groups>javaee-full,se</excluded.groups>
            </properties>
        </profile>
        <profile>
            <id>jakarta-staging</id>
            <repositories>
                <repository>
                    <id>jakarta-releases</id>
                    <url>https://jakarta.oss.sonatype.org/content/groups/staging/</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>
        </profile>
    </profiles>

</project>