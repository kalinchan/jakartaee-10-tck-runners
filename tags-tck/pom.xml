<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>tags-tck-runner</artifactId>
    <packaging>pom</packaging>

    <name>TCK: tags</name>

    <properties>
        <db.delimiter>;</db.delimiter>
        <db.name>derby</db.name>
        <derby.zip.url>https://dlcdn.apache.org//db/derby/db-derby-10.15.2.0/db-derby-10.15.2.0-bin.zip</derby.zip.url>
        <db.home>${project.build.directory}${file.separator}db-derby-10.15.2.0-bin</db.home>
        <jdbc.classpath>${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}javadb${file.separator}lib${file.separator}derbyclient.jar:${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}javadb${file.separator}lib${file.separator}derbyshared.jar:${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}javadb${file.separator}lib${file.separator}derbytools.jar</jdbc.classpath>
        <asadmin.home>${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish${file.separator}bin${file.separator}asadmin</asadmin.home>
        <jdbc.db>derby</jdbc.db>
        <jstl.db.driver>org.apache.derby.jdbc.ClientDriver</jstl.db.driver>
        <jstl.db.name>derbyDB</jstl.db.name>
        <jstl.db.password>cts1</jstl.db.password>
        <jstl.db.port>1527</jstl.db.port>
        <jstl.db.server>localhost</jstl.db.server>
        <jstl.db.url>jdbc:derby://${jstl.db.server}:${jstl.db.port}/${jstl.db.name};create=true</jstl.db.url>
        <jstl.db.user>cts1</jstl.db.user>
        <payara.toplevel.dir>payara7</payara.toplevel.dir>
        <jstl.db.driver>org.apache.derby.jdbc.ClientDriver</jstl.db.driver>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>fish.payara.jakarta.tests.tck</groupId>
            <artifactId>jakarta-tags-tck</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
       <plugins>
           <plugin>
               <groupId>com.googlecode.maven-download-plugin</groupId>
               <artifactId>download-maven-plugin</artifactId>
               <executions>
                   <execution>
                       <id>download-derby</id>
                       <phase>generate-resources</phase>
                       <goals>
                           <goal>wget</goal>
                       </goals>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <url>${derby.zip.url}</url>
                           <unpack>true</unpack>
                           <outputDirectory>${project.build.directory}</outputDirectory>
                       </configuration>
                   </execution>
               </executions>

           </plugin>
           <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>exec-maven-plugin</artifactId>
               <executions>
                   <execution>
                       <id>Stop-Domain</id>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <phase>pre-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <executable>${asadmin.home}</executable>
                           <arguments>
                               <argument>stop-domain</argument>
                           </arguments>
                           <successCodes>
                               <successCode>0</successCode>
                               <successCode>1</successCode>
                           </successCodes>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Start-Domain</id>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <phase>pre-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <executable>${asadmin.home}</executable>
                           <arguments>
                               <argument>start-domain</argument>
                           </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>create-jvm-options</id>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <phase>pre-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <executable>${asadmin.home}</executable>
                           <arguments>
                               <argument>create-jvm-options</argument>
                               <argument>-Djavax.xml.accessExternalStylesheet=all</argument>
                           </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>create-jvm-options-2</id>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <phase>pre-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <executable>${asadmin.home}</executable>
                           <arguments>
                               <argument>create-jvm-options</argument>
                               <argument>-Djavax.xml.accessExternalDTD=file,http</argument>
                           </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>DeleteUser-j2ee</id>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <phase>pre-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <executable>${asadmin.home}</executable>
                           <arguments>
                               <argument>--passwordfile</argument>
                               <argument>${project.basedir}${file.separator}j2ee.pass</argument>
                               <argument>delete-file-user</argument>
                               <argument>j2ee</argument>
                           </arguments>
                           <successCodes>
                               <successCode>0</successCode>
                               <successCode>1</successCode>
                           </successCodes>
                       </configuration>
                   </execution>
                   <execution>
                       <id>AddUser-j2ee</id>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <phase>pre-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <executable>${asadmin.home}</executable>
                           <arguments>
                               <argument>--passwordfile</argument>
                               <argument>${project.basedir}${file.separator}j2ee.pass</argument>
                               <argument>create-file-user</argument>
                               <argument>--groups</argument>
                               <argument>staff:mgr</argument>
                               <argument>j2ee</argument>
                           </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>DeleteUser-javajoe</id>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <phase>pre-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <executable>${asadmin.home}</executable>
                           <arguments>
                               <argument>--passwordfile</argument>
                               <argument>${project.basedir}${file.separator}javajoe.pass</argument>
                               <argument>delete-file-user</argument>
                               <argument>javajoe</argument>
                           </arguments>
                           <successCodes>
                               <successCode>0</successCode>
                               <successCode>1</successCode>
                           </successCodes>
                       </configuration>
                   </execution>
                   <execution>
                       <id>AddUser-javajoe</id>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <phase>pre-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <executable>${asadmin.home}</executable>
                           <arguments>
                               <argument>--passwordfile</argument>
                               <argument>${project.basedir}${file.separator}javajoe.pass</argument>
                               <argument>create-file-user</argument>
                               <argument>--groups</argument>
                               <argument>guest</argument>
                               <argument>javajoe</argument>
                           </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>list-users</id>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <phase>pre-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <executable>${asadmin.home}</executable>
                           <arguments>
                               <argument>list-file-users</argument>
                           </arguments>
                       </configuration>
                   </execution>
                   <execution>
                       <id>Stop-Domain-2</id>
                       <goals>
                           <goal>exec</goal>
                       </goals>
                       <phase>pre-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <executable>${asadmin.home}</executable>
                           <arguments>
                               <argument>stop-domain</argument>
                           </arguments>
                       </configuration>
                   </execution>
               </executions>
           </plugin>
           <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-antrun-plugin</artifactId>
               <executions>
                   <execution>
                       <id>start-database</id>
                       <goals>
                           <goal>run</goal>
                       </goals>
                       <phase>package</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <target>
                               <move todir="${payara.home}${file.separator}javadb">
                                   <fileset dir="${db.home}" />
                               </move>
                               <exec executable="${payara.home}${file.separator}javadb${file.separator}bin${file.separator}startNetworkServer" dir="${project.build.directory}" spawn="true" >
                                   <arg value="-noSecurityManager" />
                               </exec>
                           </target>
                       </configuration>
                   </execution>
                   <execution>
                       <id>initialise-database</id>
                       <goals>
                           <goal>run</goal>
                       </goals>
                       <phase>integration-test</phase>

                       <configuration>
                           <skip>${skipTests}</skip>
                           <target>
                               <copy file="${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbytools.jar" todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>
                               <copy file="${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbyclient.jar" todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>
                               <copy file="${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbyshared.jar" todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>

                               <sql autocommit="true" classpath="${jdbc.classpath}" delimiter="${db.delimiter}" driver="${jstl.db.driver}" onerror="continue" password="${jstl.db.password}" url="${jstl.db.url}" userid="${jstl.db.user}">
                                   <transaction src="${project.build.directory}${file.separator}..${file.separator}sql${file.separator}${db.name}${file.separator}${db.name}.ddl.jstl.sql"/>
                               </sql>
                           </target>
                       </configuration>
                   </execution>
                   <execution>
                       <id>stop-database</id>
                       <goals>
                           <goal>run</goal>
                       </goals>
                       <phase>post-integration-test</phase>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <target>
                               <exec executable="${payara.home}${file.separator}javadb${file.separator}bin${file.separator}stopNetworkServer" dir="${project.build.directory}" />
                           </target>
                       </configuration>
                   </execution>
               </executions>
           </plugin>
           <plugin>
               <artifactId>maven-failsafe-plugin</artifactId>
               <executions>
                   <execution>
                       <id>tests</id>
                       <goals>
                           <goal>integration-test</goal>
                           <goal>verify</goal>
                       </goals>
                       <configuration>
                           <skip>${skipTests}</skip>
                           <additionalClasspathElements>
                               <additionalClasspathElement>${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.servlet-api.jar</additionalClasspathElement>
                               <additionalClasspathElement>${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.el-api.jar</additionalClasspathElement>
                               <additionalClasspathElement>${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.servlet.jsp-api.jar</additionalClasspathElement>
                               <additionalClasspathElement>${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.servlet.jsp.jstl-api.jar</additionalClasspathElement>
                           </additionalClasspathElements>
                           <dependenciesToScan>fish.payara.jakarta.tests.tck:jakarta-tags-tck</dependenciesToScan>
                           <systemPropertyVariables>
                               <payaraHome>${project.build.directory}${file.separator}${payara.toplevel.dir}</payaraHome>
                               <payara.home>${project.build.directory}${file.separator}${payara.toplevel.dir}</payara.home>
                               <webServerHome>${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish</webServerHome>
                               <impl.vi>glassfish</impl.vi>
                               <impl.vi.deploy.dir>${webServerHome}${file.separator}domains${file.separator}domain1${file.separator}autodeploy</impl.vi.deploy.dir>
                               <impl.deploy.timeout.multiplier>30</impl.deploy.timeout.multiplier>
                               <jspservlet.classes>${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.servlet-api.jar:${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.servlet.jsp-api.jar:${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.el-api.jar</jspservlet.classes>
                               <jstl.classes>${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.servlet.jsp.jstl.jar:${project.build.directory}${file.separator}${payara.toplevel.dir}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.servlet.jsp.jstl-api.jar</jstl.classes>
                               <junit.log.traceflag>true</junit.log.traceflag>
                               <jstl.db.name>derbyDB</jstl.db.name>
                               <jstl.db.server>localhost</jstl.db.server>
                               <jstl.db.port>1527</jstl.db.port>
                               <jstl.db.url>jdbc:derby://${jstl.db.server}:${jstl.db.port}/${jstl.db.name};create=true</jstl.db.url>
                               <jstl.db.driver>org.apache.derby.jdbc.ClientDriver</jstl.db.driver>
                               <jstl.db.user>cts1</jstl.db.user>
                               <jstl.db.password>cts1</jstl.db.password>
                               <user>j2ee</user>
                               <password>j2ee</password>
                               <authuser>javajoe</authuser>
                               <authpassword>javajoe</authpassword>
                               <harness.log.traceflag>true</harness.log.traceflag>
                               <cts.harness.debug>true</cts.harness.debug>
                               <porting.ts.url.class.1>com.sun.ts.tests.jstl.lib.implementation.sun.common.SunRIURL</porting.ts.url.class.1>
                           </systemPropertyVariables>
                       </configuration>
                   </execution>
               </executions>
           </plugin>
       </plugins>
    </build>
</project>
